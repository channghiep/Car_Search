{"version":3,"sources":["utils/BurgerMenu.js","utils/lottie/Loading.js","components/Tagify-Component/Car-Container/CarCard.js","components/Tagify-Component/TagifySearch.jsx","utils/lottie/LoadingLottie.js","App.js","reportWebVitals.js","index.js"],"names":["BurgerMenu","props","useState","open","setOpen","overFlow","op","body","document","querySelector","style","overflow","className","onClick","cursor","setMenuItem","to","href","Loading","defaultOptions","speed","loop","autoplay","animationData","redererSetting","preserveAspectRatio","options","height","width","Component","CarCard","onError","e","target","src","makeName","toLowerCase","textShadow","color","fontWeight","modelName","modelID","baseTagifySettings","blacklist","maxTags","placeholder","dropdown","enabled","TagifySearch","tagifyRef1","useRef","tagifySettings","searchVal","setSearchVal","objectArray","setobjectArray","carList","setCarList","loading","setLoading","notice","setNotice","settings","onChange","useCallback","detail","value","useEffect","clearAll","Axios","get","menuItem","then","res","Boolean","data","Count","Results","catch","error","console","log","current","removeAllTags","length","jsonArray","slice","split","tempArray","verifyfunc","a","i","tempObj","JSON","parse","type","make","year","fetchData","tagifyRef","autoFocus","onEditInput","onEditBeforeUpdate","onEditUpdated","onEditStart","onEditKeydown","onDropdownShow","onDropdownHide","onDropdownSelect","onDropdownScroll","onDropdownNoMatch","onDropdownUpdated","textAlign","class","map","car","Make_Name","Model_Name","Model_ID","LoadingLottie","starting","App","timer","setTimeout","clearTimeout","display","gridTemplateColumns","window","location","reload","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf24d309.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './BurgerMenu.css';\r\n\r\nexport default function BurgerMenu(props) {\r\n    const [open, setOpen] = useState(false)\r\n    //Control body overflow\r\n    function overFlow(op){\r\n      const body = document.querySelector(\"body\");\r\n      if(!op){\r\n        body.style.overflow = \"hidden\"\r\n      }else{\r\n        body.style.overflow = \"auto\"\r\n      }\r\n    }\r\n    //---------------------------//\r\n    //Burger Menu Controller\r\n    function openMenuBar() {\r\n        setOpen(!open)\r\n        overFlow(open)\r\n    }\r\n    function openMenuBar1() {\r\n        setOpen(!open)\r\n        overFlow(open)\r\n        props.setMenuItem('toyota')\r\n    }\r\n    function openMenuBar2() {\r\n        setOpen(!open)\r\n        overFlow(open)\r\n        props.setMenuItem('honda')\r\n    }\r\n    function openMenuBar3() {\r\n        setOpen(!open)\r\n        overFlow(open)\r\n        props.setMenuItem('bmw')\r\n    }\r\n    //---------------------------//\r\n    \r\n    return (\r\n        <div className=\"toggle-btn\">\r\n            <button className={`${open ? \"changed-btn\" : \" \"}`} onClick={() => openMenuBar()}>\r\n                <div className=\"toggle-btn__line\"></div>\r\n                <div className=\"toggle-btn__line\"></div>\r\n                <div className=\"toggle-btn__line\"></div>\r\n            </button>\r\n            <nav className=\"side-drawer\">\r\n                <div className=\"side-drawer-items\">\r\n                    <ul>\r\n                        <li style={{cursor:\"pointer\"}}><Link onClick= {openMenuBar1} to=\"/\" >Toyota</Link></li>\r\n                        <li style={{cursor:\"pointer\"}}><Link onClick= {openMenuBar2} to=\"/\"><a  href=\"/\">Honda</a></Link></li>\r\n                        <li style={{cursor:\"pointer\"}}><Link onClick= {openMenuBar3} to=\"/\"><a  href=\"/\">BMW</a></Link></li>\r\n                    </ul>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n        \r\n    )\r\n}","import React, { Component } from 'react'\r\nimport Lottie from 'react-lottie'\r\nimport animationData from './lf30_nhg4au0e.json'\r\n\r\nclass Loading extends Component {\r\n    \r\n    render(){\r\n\r\n        const defaultOptions = {\r\n            speed:\"2.5\",\r\n            loop: true,\r\n            autoplay: true,\r\n            animationData: animationData,\r\n            redererSetting: {\r\n                preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n        };\r\n\r\n        return(\r\n            <Lottie options={defaultOptions}\r\n                height={300}\r\n                width={300}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react'\r\nimport './CarCard.css'\r\n\r\n\r\nexport default function CarCard(props){\r\n    function addDefaultImage(e){\r\n        e.target.src = '/default.png'\r\n    }\r\n    return(\r\n        <div className=\"carCard\">\r\n            <div className=\"carImg\">\r\n                <img onError={addDefaultImage} src={`/${props.makeName.toLowerCase()}.jpg`}/>\r\n            </div>\r\n            <div style={{textShadow:'0 0 8px hsl(0deg 0% 100% / 33%)' }} className=\"carText\">\r\n                <div className='item1'>\r\n                    <span style={{color: '#008964', fontWeight:'ligher'}}>Brand </span><br/>\r\n                    <span style={{ fontWeight:'bold'}}>{props.makeName}</span>\r\n                </div>\r\n                <div className='item2'>\r\n                    <span style={{color: '#008964', fontWeight:'ligher'}}> Model </span><br/>\r\n                    <span style={{ fontWeight:'bold'}}>{props.modelName}</span>\r\n                </div>\r\n                <div className='item3'>\r\n                    <span style={{color: '#008964', fontWeight:'ligher'}}> Car ID </span><br/>\r\n                    <span style={{ fontWeight:'bold'}}>{props.modelID}</span>                \r\n                </div>\r\n                <div style={{color: '#00563f', fontWeight:'bold'}} className='item4'>\r\n                    DETAILS\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect, useCallback, useRef} from 'react'\r\nimport Axios from 'axios'\r\n//Import Tagify dependencies and style\r\nimport Tags from '@yaireo/tagify/dist/react.tagify'\r\nimport '@yaireo/dragsort/dist/dragsort.css'\r\nimport './TagifySearch.css'\r\n//-------------------------------------//\r\n//Import Lottie Component\r\nimport Loading from '../../utils/lottie/Loading'\r\n//--------------------------------------//\r\n//Import Assets\r\nimport searchIcon from '../../assets/search-3-64.png'\r\nimport CarCard from './Car-Container/CarCard'\r\n//--------------------------------------//\r\n\r\n// Tagify settings object\r\nconst baseTagifySettings = {\r\n  blacklist: [\"xxx\", \"yyy\", \"zzz\"],\r\n  maxTags: 3,\r\n  placeholder: \"Search Make, Type, Year\",\r\n  dropdown: {\r\n    enabled: 0\r\n  }\r\n}\r\n\r\nconst TagifySearch = (props) => {\r\n  const tagifyRef1 = useRef()\r\n  const [tagifySettings, setTagifySettings] = useState([])\r\n  // const [tagifyProps, setTagifyProps] = useState({})\r\n  const [searchVal, setSearchVal] = useState([])\r\n  // const [objectArray, setobjectArray] = useState([{value: 'toyota', type: 'make'}])\r\n  const [objectArray, setobjectArray] = useState([])\r\n  const [carList, setCarList] = useState([])\r\n  //Loading state\r\n  const [loading, setLoading] = useState(true)\r\n  //----------------------//\r\n  const [notice, setNotice] = useState(true)\r\n\r\n  // merged tagify settings (static & dynamic)\r\n  const settings = {\r\n    ...baseTagifySettings,\r\n    ...tagifySettings\r\n  }\r\n  //Monitor Changing in Search Value\r\n  const onChange = useCallback(e => {\r\n    setSearchVal(e.detail.value)\r\n  }, [])\r\n\r\n  //Monitor menu selection\r\n  useEffect(()=>{\r\n    setCarList([])\r\n    clearAll()\r\n    Axios.get(`https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMake/${props.menuItem}?format=json`).then(res=>{\r\n      if(Boolean(res.data.Count) === true){\r\n        setCarList(res.data.Results)\r\n        setLoading(false)\r\n      }\r\n    }).catch((error)=>{\r\n      console.log(error)\r\n    })\r\n  },[props.menuItem])\r\n  //--------------------------//\r\n\r\n  // access Tagify clearAll:\r\n  const clearAll = () => {\r\n    tagifyRef1.current && tagifyRef1.current.removeAllTags()\r\n  }\r\n  //----------------------------//\r\n\r\n  useEffect(()=>{\r\n    if(searchVal.length > 2){\r\n      let jsonArray = searchVal.slice(1,-1).split(\",\")\r\n      let tempArray = [];\r\n      //----This Function will take user input and indentify the type of keyword weather it is make or vehicle type or year\r\n      const verifyfunc = async () =>{\r\n        if(jsonArray.length > 0){\r\n          let i = 0;\r\n          while(i < jsonArray.length){\r\n            let tempObj = JSON.parse(jsonArray[i])\r\n            \r\n            if(tempObj){\r\n              ///vehicles/GetMakesForVehicleType/car?format=json---Vehicle type\r\n              const response = await Axios.get(`https://vpic.nhtsa.dot.gov/api/vehicles/GetMakesForVehicleType/${tempObj.value}?format=json`);\r\n            if(response.data.Count === 0){\r\n              //vehicles/GetVehicleTypesForMake/mercedes?format=json--Vehicle name\r\n              await Axios.get(`https://vpic.nhtsa.dot.gov/api/vehicles/GetVehicleTypesForMake/${tempObj.value}?format=json`)\r\n                .then(res =>{\r\n                  if(res.data.Count  !==0){\r\n                    tempObj.type = 'make'\r\n                  }else{\r\n                    tempObj.type = 'year'\r\n                  }\r\n                }).catch((error)=>{\r\n                  console.log(error)\r\n                })\r\n            }else{\r\n              setCarList([])\r\n              setLoading(true)\r\n              tempObj.type = 'vehicletype'\r\n            }\r\n              //Filling up temporary Array to pass to objectArray\r\n              tempArray[i]=tempObj;\r\n              //-----------------------------------------------//\r\n            }          \r\n            i++;\r\n          }  \r\n        }\r\n        setobjectArray(tempArray)\r\n      }\r\n      //------------------------------------------------------------------------//\r\n\r\n      verifyfunc()\r\n    }else{\r\n      setCarList([])\r\n      setLoading(true)\r\n    }\r\n  },[searchVal])\r\n  //This function will go through the objectArray to indentify what API can be used base on user's input\r\n  function fetchData(objectArray){\r\n    let make = '';\r\n    let type = '';\r\n    let year = '';\r\n    let i = 0;\r\n    if(objectArray.length > 0){\r\n      while(i<objectArray.length){\r\n        if(objectArray[i].type === 'make'){\r\n          make = `${objectArray[i].value}`\r\n        }else if(objectArray[i].type === 'vehicletype'){\r\n          type = `${objectArray[i].value}`\r\n        }else{\r\n          year = `${objectArray[i].value}`\r\n        }\r\n        i++\r\n      }\r\n      if(make !== ''){\r\n        if(type !== ''){\r\n          if(year !== ''){\r\n            Axios.get(`https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMakeYear/make/${make}/modelyear/${year}/vehicletype/${type}?format=json`).then(res=>{\r\n              if(Boolean(res.data.Count) === true){\r\n                setCarList(res.data.Results)\r\n                setLoading(false)\r\n              }\r\n            }).catch((error)=>{\r\n              console.log(error)\r\n            })\r\n          }else{\r\n            Axios.get(`https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMakeYear/make/${make}/vehicletype/${type}?format=json`).then(res=>{\r\n              if(Boolean(res.data.Count) === true){\r\n                setCarList(res.data.Results)\r\n                setLoading(false)\r\n              }\r\n            }).catch((error)=>{\r\n              console.log(error)\r\n            })\r\n          }\r\n        }else{\r\n          if(year !== ''){\r\n            Axios.get(`https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMakeYear/make/${make}/modelyear/${year}?format=json`).then(res=>{\r\n              if(Boolean(res.data.Count) === true){\r\n                setCarList(res.data.Results)\r\n                setLoading(false)\r\n              }\r\n            }).catch((error)=>{\r\n              console.log(error)\r\n            })\r\n          }else{\r\n            Axios.get(`https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMake/${make}?format=json`).then(res=>{\r\n              if(Boolean(res.data.Count) === true){\r\n                setCarList(res.data.Results)\r\n                setLoading(false)\r\n              }\r\n            }).catch((error)=>{\r\n              console.log(error)\r\n            })\r\n          }\r\n        }\r\n      setNotice(false) \r\n      }else{\r\n        // console.log('Enter Make')\r\n        setNotice(true)\r\n      }\r\n    }\r\n  }\r\n  //-----------------------------------------------------------------------------------------------//\r\n  useEffect(()=>{\r\n    fetchData(objectArray)\r\n  },[objectArray])\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"mainTag\">\r\n          <Tags\r\n            className=\"tagClass\"\r\n            tagifyRef={tagifyRef1}\r\n            settings={settings}\r\n            autoFocus={false}\r\n            onChange={onChange}\r\n            onEditInput={() => console.log(\"onEditInput\")}\r\n            onEditBeforeUpdate={() => console.log`onEditBeforeUpdate`}\r\n            onEditUpdated={() => console.log(\"onEditUpdated\")}\r\n            onEditStart={() => console.log(\"onEditStart\")}\r\n            onEditKeydown={() => console.log(\"onEditKeydown\")}\r\n            onDropdownShow={() => console.log(\"onDropdownShow\")}\r\n            onDropdownHide={() => console.log(\"onDropdownHide\")}\r\n            onDropdownSelect={() => console.log(\"onDropdownSelect\")}\r\n            onDropdownScroll={() => console.log(\"onDropdownScroll\")}\r\n            onDropdownNoMatch={() => console.log(\"onDropdownNoMatch\")}\r\n            onDropdownUpdated={() => console.log(\"onDropdownUpdated\")}\r\n          />\r\n        {notice ? <p style={{textAlign:\"center\"}}>Please enter Make</p> : <p></p>}\r\n        {loading ? \r\n          <div style={{height:'70vh'}} class=\"preload-wrapper\">\r\n            <div class=\"preload-item\">\r\n              <Loading/> \r\n            </div>\r\n          </div>\r\n        : \r\n        <div className=\"carContainer\">\r\n          {carList.map((car)=>{\r\n            return(\r\n              <CarCard key={car.Model_ID}\r\n                makeName={car.Make_Name}\r\n                modelName={car.Model_Name}\r\n                modelID={car.Model_ID}\r\n              />\r\n            )\r\n          })}\r\n        </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TagifySearch;\r\n","import React, { Component } from 'react'\r\nimport Lottie from 'react-lottie'\r\nimport starting from './starting.json'\r\n//Control Lottie Animation when start loading website\r\nexport default class LoadingLottie extends Component {\r\n    \r\n    render(){\r\n        const defaultOptions = {\r\n            loop: true,\r\n            autoplay: true,\r\n            animationData: starting,\r\n            redererSetting: {\r\n                preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n        };\r\n        return(\r\n            <Lottie options={defaultOptions}\r\n                height={300}\r\n                width={300}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from \"react-dom\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  NavLink,\r\n  Redirect\r\n} from \"react-router-dom\"\r\nimport './App.css'\r\n//External style\r\nimport '@yaireo/ui-switch/src/switch.scss'\r\n//External Library\r\nimport BurgerMenu from \"./utils/BurgerMenu\"\r\nimport TagifySearch from \"./components/Tagify-Component/TagifySearch\"\r\nimport LoadingLottie from './utils/lottie/LoadingLottie'\r\n\r\nexport default function App() {\r\n  const [loading, setLoading] = useState(true)\r\n  const [menuItem, setMenuItem]= useState('')\r\n\r\n  //Refresh page\r\n  function refresh(){\r\n    window.location.reload(false);\r\n  }\r\n  //-----------------------//\r\n\r\n  useEffect(() => {\r\n    const timer =  setTimeout(() => {\r\n      setLoading(false)\r\n    },4000)\r\n    return () => clearTimeout(timer)\r\n  },[])\r\n  return (\r\n    <div className=\"App\">\r\n      {loading ?\r\n        <div class=\"preload-wrapper\">\r\n          <div class=\"preload-item\">\r\n            <LoadingLottie/> \r\n          </div>\r\n        </div>\r\n      :\r\n      <div style={{display:'grid', gridTemplateColumns:'100%'}}>\r\n        <Router>\r\n          <header>\r\n            <BurgerMenu setMenuItem={setMenuItem}/>\r\n              <div className=\"header\">\r\n                <span style={{cursor:'pointer'}} onClick={refresh}>Fin<span style={{color: '#008964', fontWeight:'ligher'}}>da</span>Car</span>\r\n              </div>\r\n          </header>\r\n          <Switch>\r\n            <div>\r\n            <Route exact path=\"/\">\r\n              <TagifySearch menuItem={menuItem}/>\r\n            </Route>\r\n            </div>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n      }\r\n    </div>  \r\n  )\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}